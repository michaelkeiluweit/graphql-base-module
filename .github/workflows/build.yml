name: CI

on:
    - push
    - pull_request

env:
    DEFAULT_COMPOSER_FLAGS: --no-interaction --no-ansi --no-progress --no-suggest --prefer-dist --no-plugins

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php:
                    - "7.4"
                env:
                    - DEPENDENCIES=""

        steps:
            - name: Checkout graphql-base
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: xdebug
                  extensions: gd, zip

            - name: Install dependencies
              if: ${{ matrix.php == '8.0'}}
              run: composer update $DEFAULT_COMPOSER_FLAGS $DEPENDENCIES

            - name: Generated Unified Namespace
              if: ${{ matrix.php == '8.0'}}
              run: ./vendor/bin/oe-eshop-unified_namespace_generator

            - name: Test syntax
              if: ${{ matrix.php == '8.0'}}
              run: composer test:syntax

            - name: Lint
              if: ${{ matrix.php == '8.0'}}
              run: composer test:lint

            - name: New Unit Tests configuration
              if: ${{ matrix.php == '8.0'}}
              run: |
                  vendor/bin/phpunit -c tests/phpunit_new.xml tests/Unit/

            - name: Infection
              if: ${{ matrix.php == '8.0' && env.DEPENDENCIES == '' }}
              run: composer test:infection

            - name: Static analysis
              if: ${{ matrix.php == '8.0' && env.DEPENDENCIES == '' }}
              run: composer test:static

            - uses: satackey/action-docker-layer-caching@v0.0.11
              if: ${{ env.DEPENDENCIES == '' }}
              continue-on-error: true
              with:
                  key: docker-layer-caching-${{ github.workflow }}-${{ matrix.php }}-{hash}
                  restore-keys: |
                      docker-layer-caching-${{ github.workflow }}-${{ matrix.php }}-

            - name: Build docker
              if: ${{ env.DEPENDENCIES == '' }}
              run: |
                  cd /home/runner/work/
                  git clone --depth 1 https://github.com/OXID-eSales/docker-eshop-sdk.git
                  cd docker-eshop-sdk
                  make .env
                  sed "s/PHP_VERSION=.*/PHP_VERSION=${{ matrix.php }}/" -i .env
                  git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-7.0.x --single-branch data/oxideshop
                  mkdir data/oxideshop/debug
                  make permissions
                  make data/oxideshop/vendor/
                  make data/oxideshop/source/config.inc.php
                  docker-compose up -d php
                  sleep 10
                  mkdir $GITHUB_WORKSPACE/artifact
                  make reset-db

            - name: Prepare shop
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  mkdir covs
                  cp -r $GITHUB_WORKSPACE graphql-base-module
                  sed -i "1s/^/php_flag display_errors off\nphp_value xdebug.max_nesting_level 1000\n\n/" source/.htaccess
                  docker-compose exec -T --user oxid php php vendor/bin/oe-eshop-unified_namespace_generator
                  docker-compose exec -T --user oxid php composer config repositories.grapqhl-base path ./graphql-base-module/
                  docker-compose exec -T --user oxid php composer require oxid-esales/graphql-base:*
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:install vendor/oxid-esales/graphql-base/
                  docker-compose exec -T --user oxid php php bin/oe-console oe:module:activate oe_graphql_base

            - name: Run Codeception tests
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  docker-compose exec -T --user oxid php composer require codeception/c3 --dev
                  docker-compose exec -T --user oxid php composer require codeception/module-rest:*
                  docker-compose exec -T --user oxid php composer require codeception/module-phpbrowser --dev
                  sed -i 's/<?php/<?php\n\nrequire(__DIR__ . "\/..\/c3.php");/' source/bootstrap.php
                  docker-compose exec -T -e MODULE_IDS=oe_graphql_base -e RUN_TESTS_FOR_SHOP=0 -e RUN_TESTS_FOR_MODULES=0 -e ACTIVATE_ALL_MODULES=1 -e ADDITIONAL_TEST_PATHS='/var/www/oxideshop/vendor/oxid-esales/graphql-base/tests' php vendor/bin/runtests-codeception --coverage-phpunit

            - name: Unit Tests
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  mkdir $GITHUB_WORKSPACE/artifact/phpunit/
                  docker-compose exec -T -e MODULE_IDS=oe_graphql_base -e RUN_TESTS_FOR_SHOP=0 -e RUN_TESTS_FOR_MODULES=0 -e ACTIVATE_ALL_MODULES=1 -e ADDITIONAL_TEST_PATHS='/var/www/oxideshop/vendor/oxid-esales/graphql-base/tests' php php vendor/bin/runtests --coverage-php=/var/www/oxideshop/covs/unit.cov AllTestsUnit

            - name: Collect and merge coverage reports
              continue-on-error: true
              run: |
                  cd /home/runner/work/docker-eshop-sdk/data/oxideshop/
                  ls -alh graphql-base-module/tests/Codeception/_output/
                  cp graphql-base-module/tests/Codeception/_output/coverage.serialized covs/codeception.cov
                  wget https://phar.phpunit.de/phpcov-7.0.2.phar
                  ls -alh covs/
                  docker-compose exec -T --user oxid php php phpcov-7.0.2.phar merge --clover covs/coverage.xml covs
                  sed -i 's/\/var\/www\/oxideshop\/graphql-base-module\///' covs/coverage.xml
                  cp covs/coverage.xml $GITHUB_WORKSPACE/artifact/

            - name: Archive code coverage results
              uses: actions/upload-artifact@v2
              with:
                  name: codeception-coverage-report
                  path: /home/runner/work/graphql-base-module/graphql-base-module/artifact/

            - name: SonarCloud Scan
              if: ${{ matrix.php == '7.4' && env.DEPENDENCIES == '' }}
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                  args: >
                      -Dsonar.organization=oxid-esales
                      -Dsonar.projectKey=OXID-eSales_graphql-base-module
                      -Dsonar.sources=src
                      -Dsonar.tests=tests
                      -Dsonar.sourceEncoding=UTF-8
                      -Dsonar.php.coverage.reportPaths=artifact/coverage.xml
